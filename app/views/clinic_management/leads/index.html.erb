<%# render_menu(@menu) %>

<h5 class="text-xl font-semibold text-gray-800">Lista dos pacientes ausentes mais antigos que 120 dias</h5>
<br>

<!-- Nova tabela para download por ano/mês -->
<table class="min-w-full bg-white border border-gray-300 mb-8">
  <thead>
    <tr>
      <th class="py-2 px-4 border-b">Ano</th>
      <th class="py-2 px-4 border-b">Mês</th>
      <th class="py-2 px-4 border-b">Download</th>
    </tr>
  </thead>
  <tbody>
    <% if @leads.any? %>
      <% start_date = @leads.last.appointments.last.service.date %>
      <% end_date = @leads.first.appointments.last.service.date %>
      <% (start_date.to_date..end_date.to_date).map(&:beginning_of_month).uniq.reverse.each do |date| %>
        <% year = date.year %>
        <% month = date.month %>
        <% leads_for_month = @leads.select { |lead| lead.appointments.last.service.date.year == year && lead.appointments.last.service.date.month == month } %>
        <tr>
          <td class="py-2 px-4 border-b"><%= year %></td>
          <td class="py-2 px-4 border-b"><%= Date::MONTHNAMES[month] %></td>
          <td class="py-2 px-4 border-b">
            <% if leads_for_month.any? %>
              <%= link_to 'Baixar CSV', download_leads_leads_path(format: :csv, year: year, month: month), 
                          class: 'bg-blue-600 hover:bg-blue-800 text-white font-bold py-1 px-2 rounded text-sm' %>
            <% else %>
              <span class="text-gray-500">Sem leads</span>
            <% end %>
          </td>
        </tr>
      <% end %>
    <% else %>
      <tr>
        <td colspan="3" class="py-2 px-4 border-b text-center">Nenhum lead encontrado</td>
      </tr>
    <% end %>
  </tbody>
</table>

<!-- Botão para download geral -->
<%= link_to 'Baixar lista completa de pacientes', download_leads_leads_path(format: :csv), 
            class: 'bg-green-600 hover:bg-green-800 text-white font-bold py-2 px-4 rounded mb-8 inline-block' %>

<br>
<%= data_table(@rows, 2) %>

<% if @leads.present? %>
<%= paginate @leads %>
<% end %>

<script>


document.addEventListener("DOMContentLoaded", function() { 
    if (window.innerWidth > 768) {
      var table = document.querySelector('table');
  
      for (let rowIndex in table.rows) {
        let row = table.rows[rowIndex];
        let widths = [];
        let cells = row.cells;
        let cellLength = cells.length;
  
        // Verifique se a linha é par ou ímpar
        let isEvenRow = rowIndex % 2 === 0;
  
        for (let i = 0; i < cellLength; i++) {
          widths.push(cells[i].offsetWidth);
        }
  
        for (let i = 0; i < cellLength; i++) {
          let cell = cells[i];
          if (cell.classList.contains('sticky')) {
            cell.style.position = 'sticky';
            cell.style.left = widths.slice(0, i).reduce((a, b) => a + b, 0) + 'px';
            cell.style.borderBottom = '1px solid #dee2e6';
  
            // Aplicar a cor de fundo baseada na paridade da linha
            cell.style.backgroundColor = isEvenRow ? '#fff' : '#EFF6FF';
          }
        }
      }
    }
  })
  

</script>


<style>
.pagination {
  display: flex;
  justify-content: center;
  padding: 1em 0;
}

.pagination li {
  list-style: none;
}

.pagination li a {
  margin: 0 0.5em;
  padding: 0.5em 1em;
  border: 1px solid #e2e8f0; /* border-gray-300 */
  color: #4a5568; /* text-gray-700 */
}

.pagination li.active a,
.pagination li a:hover {
  background-color: #edf2f7; /* bg-gray-200 */
  color: #2d3748; /* text-gray-800 */
}

.pagination li.disabled a {
  color: #a0aec0; /* text-gray-400 */
  cursor: not-allowed;
}

/* If you are using SVG for the icons: */
.pagination li a svg {
  vertical-align: middle;
}
</style>

<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">